{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["buttons","value","displayValue","style","ButtonWrapper","styled","div","StyledButton","button","Background","Screenshow","h1","App","useState","screen","setScreen","className","map","item","index","onClick","val","currentStr","join","total","evaluate","newArr","shift","handleClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAKMA,EAAU,CACd,CAAEC,MAAO,QAASC,aAAc,KAAMC,MAAO,SAC7C,CAAEF,MAAO,IAAKC,aAAc,OAAKC,MAAO,YACxC,CAAEF,MAAO,IAAKC,aAAc,IAAKC,MAAO,UACxC,CAAEF,MAAO,IAAKC,aAAc,IAAKC,MAAO,UACxC,CAAEF,MAAO,IAAKC,aAAc,IAAKC,MAAO,UACxC,CAAEF,MAAO,IAAKC,aAAc,IAAKC,MAAO,YACxC,CAAEF,MAAO,IAAKC,aAAc,IAAKC,MAAO,UACxC,CAAEF,MAAO,IAAKC,aAAc,IAAKC,MAAO,UACxC,CAAEF,MAAO,IAAKC,aAAc,IAAKC,MAAO,UACxC,CAAEF,MAAO,IAAKC,aAAc,IAAKC,MAAO,YACxC,CAAEF,MAAO,IAAKC,aAAc,IAAKC,MAAO,UACxC,CAAEF,MAAO,IAAKC,aAAc,IAAKC,MAAO,UACxC,CAAEF,MAAO,IAAKC,aAAc,IAAKC,MAAO,UACxC,CAAEF,MAAO,IAAKC,aAAc,IAAKC,MAAO,YACxC,CAAEF,MAAO,IAAKC,aAAc,IAAKC,MAAO,eACxC,CAAEF,MAAO,IAAKC,aAAc,IAAKC,MAAO,UACxC,CAAEF,MAAO,IAAKC,aAAc,IAAKC,MAAO,cA4CpCC,EAAgBC,IAAOC,IAAV,ipCA4EbC,EAAeF,IAAOG,OAAV,iHAQZC,EAAaJ,IAAOG,OAAV,8RAgBVE,EAAaL,IAAOM,GAAV,4KAUDC,EAvJJ,WACT,MAA4BC,mBAAS,IAArC,mBAAQC,EAAR,KAAeC,EAAf,KAkBA,OACE,8BACI,eAACN,EAAD,WACA,qDACA,cAACC,EAAD,UACF,qBAAKM,UAAU,iBAAf,SAAgC,6BAAKF,QAErC,cAACV,EAAD,UACCJ,EAAQiB,KAAI,SAACC,EAAMC,GAAP,OACT,cAACZ,EAAD,CAEES,UAAWE,EAAKf,MAChBiB,QAAS,kBA5BC,SAACC,GACnB,GAAY,UAARA,EACFN,EAAU,CAAC,SACN,GAAY,MAARM,EAAa,CACtB,IAAIC,EAAaR,EAAOS,KAAK,IACzBC,EAAQC,YAASH,GACrBP,EAAU,CAACS,QACN,CACL,IAAIE,EAAM,sBAAOZ,GAAP,CAAeO,IACP,IAAdK,EAAO,IACTA,EAAOC,QAETZ,EAAUW,IAgBWE,CAAYV,EAAKjB,QAHlC,SAKGiB,EAAKhB,cAJDiB,cC1CFU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0d35006a.chunk.js","sourcesContent":["import { useState } from \"react\"\nimport styled from \"styled-components\" ;\nimport './App.css';\nimport { evaluate } from \"mathjs\";\n\nconst buttons = [\n  { value: \"clear\", displayValue: \"AC\", style: \"clear\" },\n  { value: \"/\", displayValue: \"÷\", style: \"operator\" },\n  { value: \"7\", displayValue: \"7\", style: \"number\" },\n  { value: \"8\", displayValue: \"8\", style: \"number\" },\n  { value: \"9\", displayValue: \"9\", style: \"number\" },\n  { value: \"*\", displayValue: \"x\", style: \"operator\" },\n  { value: \"4\", displayValue: \"4\", style: \"number\" },\n  { value: \"5\", displayValue: \"5\", style: \"number\" },\n  { value: \"6\", displayValue: \"6\", style: \"number\" },\n  { value: \"-\", displayValue: \"-\", style: \"operator\" },\n  { value: \"1\", displayValue: \"1\", style: \"number\" },\n  { value: \"2\", displayValue: \"2\", style: \"number\" },\n  { value: \"3\", displayValue: \"3\", style: \"number\" },\n  { value: \"+\", displayValue: \"+\", style: \"operator\" },\n  { value: \"0\", displayValue: \"0\", style: \"number zero\" },\n  { value: \".\", displayValue: \".\", style: \"number\" },\n  { value: \"=\", displayValue: \"=\", style: \"eoperator\" }\n]\n\nconst App= () => {\n  const [ screen,setScreen] = useState([]);\n  \n  const handleClick = (val) => {\n    if (val === \"clear\") {\n      setScreen([0])\n    } else if (val === \"=\") {\n      let currentStr = screen.join(\"\")\n      let total = evaluate(currentStr)\n      setScreen([total])\n    } else {\n      let newArr = [...screen, val]\n      if (newArr[0] === 0) {\n        newArr.shift()\n      }\n      setScreen(newArr)\n    }\n  }\n\n  return (\n    <div>\n        <Background>\n        <h1>I ❤️ Math</h1>\n        <Screenshow>\n      <div className=\"screen-wrapper\"><h1>{screen}</h1></div>\n      </Screenshow>\n      <ButtonWrapper>\n      {buttons.map((item, index) => (\n          <StyledButton\n            key={index}\n            className={item.style}\n            onClick={() => handleClick(item.value)}\n          >\n            {item.displayValue}\n         </StyledButton>\n      ))}\n      </ButtonWrapper>\n      </Background>\n    </div>\n  );\n}\nconst ButtonWrapper = styled.div` \n\nmargin: 100px,150px\nheight:350 px;\nwidth: 350 px;\npadding:100px;\ndisplay:grid;\ngrid-template-areas:\n\"clear clear clear .\"\n\". . . .\"\n\". . . .\"\n\". . . .\"\n\"zero zero . .\";\n\n.clear{\n  grid-area: clear;  \n  background-color:#f4cae0;\n  color: #120d31;\n  border-radius:20px;\n  border-color:#b298dc;\n  margin:2px\n  border:3px;\n  border-radius:10px\n}\n\n.zero{\n  background-color:#f4cae0;\n  color: #120d31;\ngrid-area: zero;\nborder-radius:20px;\n  }\n\n  .number{\n    background-color:#a1b5d8;\n    color: #f7edf0;\n  border-radius:30px;\n  border:double;\n  border-color:#284b63;\n  margin:5px;\n\n  }\n.operator{\n  background-color:#f5eb7f;\n  border:solid;\n  border-color:#b298dc;\n  margin:2px\n  border:2px;\n  border-radius:10px\n}\n.eoperator{\n  background-color:#f4cae0;\n  color: #120d31;\n  border:solid;\n  border-color:#b298dc;\n  margin:2px\n  border:2px;\n  border-radius:10px\n}\n.eoperator:hover{\n  filter: blur(1px)\n}\n.clear:hover{\n  filter: blur(1px)\n \n}\n.number:hover{\n  transform: scale(1.1)\n}\n.operator:hover{\n  \n  opacity: 0.8;\n  background-color: rgba(255, 255, 255, 0.5);\n  \n\n}\n`\nconst StyledButton = styled.button`\ndisplay:flex;\njustify-content:centre;\nheight:60 vh;\nwidth: 60 vw;\npadding:35px;\n`\n\nconst Background = styled.button`\ndisplay:flex;\nrow-direction:row;\njustify-content:centre;\nflex-flow: column wrap;\nbackground-color:#ada7c9;\ncolor: #120d31;\nmargin-left:30%;\nmargin-top:15px;\n\nheight:100 px;\nwidth: 100 px;\nborder-color:#ffb3c6;\nborder:solid;\nborder-radius:15px;\n`\nconst Screenshow = styled.h1`\n  background-color:#f4cae0;\n  margin:20px;\npadding:20 px;\nwidth:90%;\nhight:10%;\nborder-color:#ffb3c6;\nborder:solid;\nborder-radius:15px;\n`\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}